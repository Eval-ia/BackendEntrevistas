INSERT IGNORE INTO `pregunta` (`id_pregunta`, `es_generica`, `texto`, `id_puesto`) VALUES
(1, 1, '¿Qué te motivó a postularte a esta empresa?', NULL),
(2, 1, '¿Prefieres trabajar solo o en equipo? ¿Por qué?', NULL),
(3, 1, '¿Cuál ha sido tu experiencia trabajando con control de versiones (Git)?', NULL),
(4, 1, '¿Estás dispuesto/a a seguir aprendiendo nuevas tecnologías o lenguajes?', NULL),
(5, 1, '¿Cómo manejas el feedback (positivo o negativo)?', NULL),
(6, 1, '¿Cómo manejas los plazos ajustados o el estrés en un proyecto?', NULL),
(7, 1, '¿Utilizas el debugging a menudo?', NULL),
(8, 1, '¿Con qué IDE te sientes más cómodo?', NULL),
(9, 0, '¿Has trabajado con Spring Boot?', 10),
(10, 0, '¿Qué entiendes por inyección de dependencias?', 10),
(11, 0, '¿Qué diferencia hay entre una clase abstracta y una interfaz en Java?', 10),
(12, 0, '¿Qué son los modificadores de acceso? ¿Cuáles conoces?', 10),
(13, 0, '¿Qué es una excepción? ¿Cuál es la diferencia entre checked y unchecked exceptions?', 10),
(14, 0, '¿Cómo aplicas el principio de inversión de dependencias en Java?', 10),
(15, 0, '¿Qué técnicas utilizas para manejar concurrencia en aplicaciones Java?', 10),
(16, 0, '¿Qué herramientas usas para pruebas unitarias y de integración en Java?', 10),
(17, 0, '¿Cómo gestionas errores y logs en tus aplicaciones Java?', 10),
(18, 0, '¿Qué diferencias hay entre JDBC y JPA?', 10),
(19, 0, '¿Cómo optimizarías una aplicación Java que tiene problemas de rendimiento?', 10),
(20, 0, '¿Cómo estructurarías un proyecto con Spring Boot y microservicios?', 10),
(21, 0, '¿Qué patrones de diseño sueles aplicar en tus proyectos?', 10),
(22, 0, '¿Cómo gestionas la seguridad en aplicaciones Java web?', 10),
(23, 0, '¿Tienes experiencia con integración continua (CI/CD) en proyectos Java?', 10),
(24, 0, '¿Qué es el Garbage Collector y cómo funciona?', 10),
(25, 0, '¿Cuál es la diferencia entre listas y tuplas?', 11),
(26, 0, '¿Qué es PEP8?', 11),
(27, 0, '¿Qué sabes sobre decoradores en Python?', 11),
(28, 0, '¿Has usado algún framework como Flask o Django?', 11),
(29, 0, '¿Qué módulos estándar has utilizado más?', 11),
(30, 0, '¿Cómo gestionas errores y excepciones en Python de forma estructurada?', 11),
(31, 0, '¿Qué librerías usas para consumir APIs REST en Python?', 11),
(32, 0, '¿Qué ventajas tiene usar un entorno virtual (virtualenv o pipenv)?', 11),
(33, 0, '¿Cómo conectas Python con una base de datos relacional?', 11),
(34, 0, '¿Qué herramientas usas para formateo, linting o análisis estático?', 11),
(35, 0, '¿Cómo organizarías un proyecto grande en Django?', 11),
(36, 0, '¿Cómo gestionas entornos virtuales y dependencias?', 11),
(37, 0, '¿Qué herramientas usas para testing y cobertura de código?', 11),
(38, 0, '¿Has trabajado con data pipelines, scraping o automatización?', 11),
(39, 0, '¿Cómo optimizas rendimiento en Python (profiling, async, multiprocessing, etc.)?', 11),
(40, 0, '¿Qué diferencias hay entre include, require, include_once y require_once?', 12),
(41, 0, '¿Qué es una variable superglobal? ¿Puedes nombrar algunas?', 12),
(42, 0, '¿Cómo se conecta PHP con una base de datos MySQL?', 12),
(43, 0, '¿Qué es una sesión y cómo se maneja en PHP?', 12),
(44, 0, '¿Has trabajado con algún framework como Laravel o Symfony?', 12),
(45, 0, '¿Cómo organizas el código en un proyecto mediano con PHP?', 12),
(46, 0, '¿Qué diferencias hay entre PDO y MySQLi?', 12),
(47, 0, '¿Cómo implementarías autenticación básica en un sistema en PHP?', 12),
(48, 0, '¿Qué convenciones de PSR conoces y aplicas?', 12),
(49, 0, '¿Cómo usarías Composer en un proyecto PHP?', 12),
(50, 0, '¿Has diseñado APIs RESTful en PHP? ¿Qué consideraciones tomas?', 12),
(51, 0, '¿Qué herramientas usas para testing automatizado en PHP?', 12),
(52, 0, '¿Cómo gestionas dependencias en proyectos grandes de PHP?', 12),
(53, 0, '¿Qué estrategias usas para escalar una aplicación en PHP?', 12),
(54, 0, '¿Cómo asegurarías una API en PHP contra ataques comunes como SQL Injection o XSS?', 12),
(55, 0, '¿Cuál es la diferencia entre var, let y const?', 13),
(56, 0, '¿Qué es el event loop en JavaScript?', 13),
(57, 0, '¿Qué es una promesa (Promise) y cómo se usa?', 13),
(58, 0, '¿Qué sabes de manipulación del DOM?', 13),
(59, 0, '¿Has trabajado con algún framework como React, Angular o Vue?', 13),
(60, 0, '¿Qué es hoisting y cómo afecta el código?', 13),
(61, 0, '¿Cómo manejas errores en funciones asincrónicas?', 13),
(62, 0, '¿Qué diferencias hay entre una función declarada y una función expresada?', 13),
(63, 0, '¿Cómo modularizas el código JavaScript (ESModules)?', 13),
(64, 0, '¿Qué ventajas ofrece el uso de fetch comparado con XMLHttpRequest?', 13),
(65, 0, '¿Cómo gestionas el estado en aplicaciones complejas (Redux, Context API, etc.)?', 13),
(66, 0, '¿Qué sabes sobre la renderización del lado del servidor (SSR)?', 13),
(67, 0, '¿Cómo asegurarías una aplicación SPA?', 13),
(68, 0, '¿Qué técnicas usas para optimizar el rendimiento de una app web?', 13),
(69, 0, '¿Qué opinas sobre el uso de TypeScript? ¿Lo has utilizado?', 13),
(70, 0, '¿Cuál es la diferencia entre public, private, protected e internal?', 14),
(71, 0, '¿Qué es el CLR?', 14),
(72, 0, '¿Has usado LINQ? ¿Puedes dar un ejemplo?', 14),
(73, 0, '¿Qué es un delegate?', 14),
(74, 0, '¿Has trabajado con Windows Forms o ASP.NET?', 14),
(75, 0, '¿Qué patrones de diseño aplicas habitualmente en C#?', 14),
(76, 0, '¿Cómo configuras un proyecto ASP.NET Core desde cero?', 14),
(77, 0, '¿Qué es un Task y cómo lo utilizas para operaciones asincrónicas?', 14),
(78, 0, '¿Qué herramientas usas para testing en .NET?', 14),
(79, 0, '¿Qué diferencias hay entre IEnumerable y IQueryable?', 14),
(80, 0, '¿Cómo gestionas el rendimiento y la escalabilidad en aplicaciones .NET de alto tráfico?', 14),
(81, 0, '¿Tienes experiencia trabajando con arquitectura basada en microservicios usando .NET? ¿Cómo gestionas la comunicación entre servicios?', 14),
(82, 0, '¿Qué estrategias usas para asegurar una aplicación web en .NET contra amenazas como XSS, CSRF o inyecciones SQL?', 14),
(83, 0, '¿Qué ventajas y desventajas ves entre Entity Framework y Dapper? ¿En qué casos usarías uno u otro?', 14),
(84, 0, '¿Cómo implementas la inyección de dependencias en ASP.NET Core?', 14),
(85, 0, '¿Qué es HTML?', 15),
(86, 0, '¿Qué etiquetas semánticas existen en HTML5?', 15),
(87, 0, '¿Qué hace la etiqueta <canvas>?', 15),
(88, 0, '¿Cuál es la diferencia entre <div> y <section>?', 15),
(89, 0, '¿Cómo insertas una imagen y un enlace?', 15),
(90, 0, '¿Cómo usarías localStorage y sessionStorage?', 15),
(91, 0, '¿Qué es ARIA y cómo mejora la accesibilidad?', 15),
(92, 0, '¿Qué técnicas usas para optimizar la carga de HTML en una web?', 15),
(93, 0, '¿Cómo afecta el uso de etiquetas semánticas al SEO?', 15),
(94, 0, '¿Cómo manejarías SEO dinámico en aplicaciones SPA?', 15),
(95, 0, '¿Cómo evalúas y mejoras la accesibilidad (a11y) de una página web?', 15),
(96, 0, '¿Qué es una clase en CSS?', 16),
(97, 0, '¿Cómo se aplica una hoja de estilos externa?', 16),
(98, 0, '¿Qué hace el position: absolute?', 16),
(99, 0, '¿Cómo cambias el color de fondo de un elemento?', 16),
(100, 0, '¿Qué son Flexbox y Grid? ¿Cuándo usarlos?', 16),
(101, 0, '¿Cómo funciona el modelo de caja (box model)?', 16),
(102, 0, '¿Qué es una media query?', 16),
(103, 0, '¿Cómo implementas dark mode?', 16),
(104, 0, '¿Cómo estructuras CSS para aplicaciones grandes (BEM, SMACSS, etc.)?', 16),
(105, 0, '¿Cómo usar variables en CSS moderno?', 16),
(106, 0, '¿Cómo optimizas CSS para rendimiento (renderizado crítico, minificación, etc.)?', 16),
(107, 0, '¿Qué diferencias prácticas hay entre CSS-in-JS y CSS modular?', 16),
(108, 0, '¿Qué es un componente en Angular?', 17),
(109, 0, '¿Qué es un módulo (NgModule)?', 17),
(110, 0, '¿Cómo se crea una app básica con Angular CLI?', 17),
(111, 0, '¿Qué es una directiva?', 17),
(112, 0, '¿Cómo funciona el data binding en Angular?', 17),
(113, 0, '¿Qué son servicios (services) y cómo se inyectan?', 17),
(114, 0, '¿Qué es RxJS y cómo se usa en Angular?', 17),
(115, 0, '¿Qué es lazy loading?', 17),
(116, 0, '¿Cómo estructurarías una app Angular enterprise?', 17),
(117, 0, '¿Cómo optimizarías el performance de una app Angular con muchos componentes?', 17),
(118, 0, '¿Cómo testearías un componente con dependencias externas?', 17),
(119, 0, '¿Cómo implementarías un state management global (ej: NgRx)?', 17),
(120, 0, '¿Qué es Bootstrap?', 18),
(121, 0, '¿Cómo se aplica el sistema de columnas?', 18),
(122, 0, '¿Qué clase usas para centrar un texto?', 18),
(123, 0, '¿Cómo usarías un grid responsivo con Bootstrap?', 18),
(124, 0, '¿Qué es una clase de utilidad y cómo mejorar el CSS con ellas?', 18),
(125, 0, '¿Cómo personalizarías los temas de Bootstrap para adaptarlos a un diseño específico?', 18),
(126, 0, '¿Cómo integrarías Bootstrap con otras herramientas o frameworks como SASS?', 18),
(127, 0, '¿Qué es Spring Boot?', 19),
(128, 0, '¿Qué es la inyección de dependencias?', 19),
(129, 0, '¿Cómo se conecta Spring Boot a una base de datos?', 19),
(130, 0, '¿Qué es Spring Data JPA?', 19),
(131, 0, '¿Cómo configuras CORS en Spring Boot?', 19),
(132, 0, '¿Qué es un @Service o @Component?', 19),
(133, 0, '¿Cómo usas Spring Security para proteger endpoints?', 19),
(134, 0, '¿Qué diferencias hay entre @Component, @Service y @Repository?', 19),
(135, 0, '¿Qué ventajas ofrece usar Spring Boot sobre Spring tradicional?', 19),
(136, 0, '¿Cómo manejas errores globales con @ControllerAdvice?', 19),
(137, 0, '¿Qué herramientas usas para testear controladores y servicios?', 19),
(138, 0, '¿Cómo haces una arquitectura hexagonal con Spring?', 19),
(139, 0, '¿Cómo versionarías una API REST en Spring Boot?', 19),
(140, 0, '¿Cómo implementas seguridad con Spring Security + JWT?', 19),
(141, 0, '¿Cómo integras microservicios con Spring Cloud?', 19),
(142, 0, '¿Qué es un ViewController?', 20),
(143, 0, '¿Cómo conectas una vista con código en Xcode?', 20),
(144, 0, '¿Qué diferencias hay entre MVC y MVVM?', 20),
(145, 0, '¿Cómo manejas UserDefaults?', 20),
(146, 0, '¿Qué es @IBOutlet y @IBAction?', 20),
(147, 0, '¿Cómo manejas la navegación entre pantallas con Coordinators?', 20),
(148, 0, '¿Qué librerías usas para consumir APIs REST?', 20),
(149, 0, '¿Cómo trabajas con Core Data o Realm?', 20),
(150, 0, '¿Qué diferencias hay entre una weak reference y una strong reference?', 20),
(151, 0, '¿Qué patrones de diseño usas frecuentemente en iOS?', 20),
(152, 0, '¿Cómo gestionas memoria con ARC?', 20),
(153, 0, '¿Como usarías Combine o Swift Concurrency?', 20),
(154, 0, '¿Cómo modularizas una app iOS?', 20),
(155, 0, '¿Qué es un Activity?', 21),
(156, 0, '¿Cómo agregas un botón a una app?', 21),
(157, 0, '¿Qué es un ViewModel?', 21),
(158, 0, '¿Cómo usas LiveData?', 21),
(159, 0, '¿Cómo accedes a una API REST?', 21),
(160, 0, '¿Qué patrón arquitectónico usas y por qué (MVP, MVVM, Clean)?', 21),
(161, 0, '¿Cómo implementas navegación con Jetpack Navigation?', 21),
(162, 0, '¿Qué diferencias hay entre Service, JobScheduler y WorkManager?', 21),
(163, 0, '¿Cómo persistes datos usando Room?', 21),
(164, 0, '¿Qué librerías usas para testing de UI y unitarios?', 21),
(165, 0, '¿Cómo modularizas una app grande?', 21),
(166, 0, '¿Cómo gestionas dependencias con Dagger/Hilt?', 21),
(167, 0, '¿Cómo aplicas arquitectura Clean o Hexagonal?', 21);